type: edu
files:
- name: src/recipes/RecipesApplication.java
  visible: true
  text: |
    package recipes;

    import org.springframework.boot.SpringApplication;
    import org.springframework.boot.autoconfigure.SpringBootApplication;

    @SpringBootApplication
    public class RecipesApplication {
        public static void main(String[] args) {
            SpringApplication.run(RecipesApplication.class, args);
        }
    }
  learner_created: false
- name: resources/application.properties
  visible: true
  text: |-
    server.port=8881
    management.endpoints.web.exposure.include=*
    management.endpoint.shutdown.enabled=true
  learner_created: false
- name: build.gradle
  visible: true
  text: |
    plugins {
        id 'java'
        id 'org.springframework.boot' version '2.3.1.RELEASE'
        id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    }

    sourceCompatibility = 11

    repositories {
        mavenCentral()
    }

    sourceSets.main.resources.srcDirs = ["resources"]

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
  learner_created: false
- name: test/RecipesApplicationTest.java
  visible: false
  text: |
    import com.google.gson.Gson;
    import org.hyperskill.hstest.dynamic.DynamicTest;
    import org.hyperskill.hstest.dynamic.input.DynamicTesting;
    import org.hyperskill.hstest.exception.outcomes.UnexpectedError;
    import org.hyperskill.hstest.exception.outcomes.WrongAnswer;
    import org.hyperskill.hstest.mocks.web.request.HttpRequest;
    import org.hyperskill.hstest.mocks.web.response.HttpResponse;
    import org.hyperskill.hstest.stage.SpringTest;
    import org.hyperskill.hstest.testcase.CheckResult;

    import static org.hyperskill.hstest.testing.expect.json.JsonChecker.*;
    import static org.hyperskill.hstest.testing.expect.Expectation.expect;

    import org.hyperskill.hstest.testing.expect.json.builder.JsonArrayBuilder;
    import recipes.RecipesApplication;

    import java.util.*;

    import static org.hyperskill.hstest.testcase.CheckResult.correct;


    public class RecipesApplicationTest extends SpringTest {

        public RecipesApplicationTest() {
            super(RecipesApplication.class, "../recipes_db.mv.db");
        }

        // Initialization ---

        static class Recipe {
            final String name;
            final String category;
            final String description;
            final String[] ingredients;
            final String[] directions;

            Recipe(String name, String category, String description, String[] ingredients, String[] directions) {
                this.name = name;
                this.category = category;
                this.description = description;
                this.ingredients = ingredients;
                this.directions = directions;
            }
        }

        final Recipe[] RECIPES = {
            // 0
            new Recipe(
                "Fresh Mint Tea /Test",
                "beverage /Test",
                "Light, aromatic and refreshing beverage, ... /Test",
                new String[]{"boiled water", "honey", "fresh mint leaves /Test"},
                new String[]{"Boil water", "Pour boiling hot water into a mug", "Add fresh mint leaves", "Mix and let the mint leaves seep for 3-5 minutes", "Add honey and mix again /Test"}
            ),
            // 1
            new Recipe(
                "Warming Ginger Tea /Test",
                "beverage /Test",
                "Ginger tea is a warming drink for cool weather, ... /Test",
                new String[]{"1 inch ginger root, minced", "1/2 lemon, juiced", "1/2 teaspoon manuka honey /Test"},
                new String[]{"Place all ingredients in a mug and fill with warm water (not too hot so you keep the beneficial honey compounds in tact)", "Steep for 5-10 minutes", "Drink and enjoy /Test"}
            ),
            // 2
            new Recipe(
                "ice-cream",
                "Dessert",
                "-",
                new String[]{"--", "---", "-"},
                new String[]{"----", "---"}
            ),
            // 3
            new Recipe(
                "tea r 4",
                "DesserT",
                "---",
                new String[]{"-", "----", "-"},
                new String[]{"----", "--", "--"}
            ),
            // 4
            new Recipe(
                "recipe ice-cream 5",
                "Desser",
                "---",
                new String[]{"-", "--", "-"},
                new String[]{"-", "--", "---"}
            ),
            // 5
            new Recipe(
                "--",
                "DeSSert",
                "---",
                new String[]{"---", "-", "--"},
                new String[]{"---", "-"}
            ),
            // 6
            new Recipe(
                "ICE-CREAM",
                "desserT",
                "----",
                new String[]{"-", "-", "--"},
                new String[]{"---", "--", "--"}
            ),
            // 7
            new Recipe(
                "---",
                "dessert",
                "--",
                new String[]{"-", "----"},
                new String[]{"-----", "-", "---"}
            ),
            // 8
            new Recipe(
                "9 recipe Tea test",
                "-",
                "----",
                new String[]{"-", "-", "----"},
                new String[]{"-----", "-", "--"}
            ),
            // 9
            new Recipe(
                "10 ice recipe test",
                "-",
                "--",
                new String[]{"----", "--;", "---"},
                new String[]{"--", "-"}
            ),
            // 10
            new Recipe(
                "11 ice-creamrecipe test",
                "veryDessert",
                "-",
                new String[]{"-", "--"},
                new String[]{"-----", "-", "---"}
            ),
            // 11
            new Recipe(
                "cream",
                "BEVerage",
                "--",
                new String[]{"---", "-", "-"},
                new String[]{"-", "--"}
            ),
            // 12
            new Recipe(
                "ice-cre",
                "---Dessert",
                "-",
                new String[]{"---", "-"},
                new String[]{"----", "-", "-"}
            ),

            // 13
            new Recipe(
                "ice-cream",
                "DESSERT",
                "-",
                new String[]{"----", "--"},
                new String[]{"-", "--", "-"}
            ),
            // 14
            new Recipe(
                "15 recipe test ice-CREAM",
                "Dessert",
                "-",
                new String[]{"-", "---'", "-----"},
                new String[]{"---", "-"}
            )
        };

        final Recipe[] INCORRECT_RECIPES = {
            //0
            new Recipe(
                null,
                "beverage",
                "Light, aromatic and refreshing beverage, ...",
                new String[]{"boiled water", "honey", "fresh mint leaves"},
                new String[]{"Boil water", "Pour boiling hot water into a mug", "Add fresh mint leaves", "Mix and let the mint leaves seep for 3-5 minutes", "Add honey and mix again"}
            ),
            //1
            new Recipe(
                "Fresh Mint Tea",
                null,
                "Light, aromatic and refreshing beverage, ...",
                new String[]{"boiled water", "honey", "fresh mint leaves"},
                new String[]{"Boil water", "Pour boiling hot water into a mug", "Add fresh mint leaves", "Mix and let the mint leaves seep for 3-5 minutes", "Add honey and mix again"}
            ),
            //2
            new Recipe(
                "Warming Ginger Tea",
                "beverage",
                null,
                new String[]{"1 inch ginger root, minced", "1/2 lemon, juiced", "1/2 teaspoon manuka honey"},
                new String[]{"Place all ingredients in a mug and fill with warm water (not too hot so you keep the beneficial honey compounds in tact)", "Steep for 5-10 minutes", "Drink and enjoy"}
            ),
            //3
            new Recipe(
                "Fresh Mint Tea",
                "beverage",
                "Light, aromatic and refreshing beverage, ...",
                null,
                new String[]{"Boil water", "Pour boiling hot water into a mug", "Add fresh mint leaves", "Mix and let the mint leaves seep for 3-5 minutes", "Add honey and mix again"}
            ),
            //4
            new Recipe(
                "Warming Ginger Tea",
                "beverage",
                "Ginger tea is a warming drink for cool weather, ...",
                new String[]{"1 inch ginger root, minced", "1/2 lemon, juiced", "1/2 teaspoon manuka honey"},
                null
            ),
            //5
            new Recipe(
                "  ",
                "beverage",
                "Light, aromatic and refreshing beverage, ...",
                new String[]{"boiled water", "honey", "fresh mint leaves"},
                new String[]{"Boil water", "Pour boiling hot water into a mug", "Add fresh mint leaves", "Mix and let the mint leaves seep for 3-5 minutes", "Add honey and mix again"}
            ),
            //6
            new Recipe(
                "Fresh Mint Tea",
                "  ",
                "Light, aromatic and refreshing beverage, ...",
                new String[]{"boiled water", "honey", "fresh mint leaves"},
                new String[]{"Boil water", "Pour boiling hot water into a mug", "Add fresh mint leaves", "Mix and let the mint leaves seep for 3-5 minutes", "Add honey and mix again"}
            ),
            //7
            new Recipe(
                "Warming Ginger Tea",
                "beverage",
                "  ",
                new String[]{"1 inch ginger root, minced", "1/2 lemon, juiced", "1/2 teaspoon manuka honey"},
                new String[]{"Place all ingredients in a mug and fill with warm water (not too hot so you keep the beneficial honey compounds in tact)", "Steep for 5-10 minutes", "Drink and enjoy"}
            ),
            //8
            new Recipe(
                "Fresh Mint Tea",
                "beverage",
                "Light, aromatic and refreshing beverage, ...",
                new String[]{},
                new String[]{"Boil water", "Pour boiling hot water into a mug", "Add fresh mint leaves", "Mix and let the mint leaves seep for 3-5 minutes", "Add honey and mix again"}
            ),
            //9
            new Recipe(
                "Warming Ginger Tea",
                "beverage",
                "Ginger tea is a warming drink for cool weather, ...",
                new String[]{"1 inch ginger root, minced", "1/2 lemon, juiced", "1/2 teaspoon manuka honey"},
                new String[]{}
            )
        };

        final Recipe[] RECIPES_CATEGORY_DESSERT_REVERSED = new Recipe[]{RECIPES[14], RECIPES[13], RECIPES[7], RECIPES[6],
            RECIPES[5], RECIPES[3], RECIPES[2]};

        final Recipe[] RECIPES_NAME_CONTAINS_ICE_CREAM_REVERSED = new Recipe[]{RECIPES[14], RECIPES[13], RECIPES[10], RECIPES[6],
            RECIPES[4], RECIPES[2]};

        final String[] JSON_RECIPES = toJson(RECIPES);
        final String[] JSON_INCORRECT_RECIPES = toJson(INCORRECT_RECIPES);

        final String API_RECIPE_NEW = "/api/recipe/new";
        final String API_RECIPE = "/api/recipe/";
        final String API_RECIPE_SEARCH = "/api/recipe/search/";
        final String API_REGISTER = "/api/register";

        // recipes ids will be saved when testing POST requests and used later to test GET/PUT/DELETE requests
        final List<Integer> recipeIds = new ArrayList<>();

        final String CATEGORY = "category";
        final String NAME = "name";

        final static Gson gson = new Gson();

        final String[] MAIN_LOGIN_PASS = {"LoginTest2@test.com", "Test2222222"};
        final String[] ADDITIONAL_LOGIN_PASS_1 = {"LoginTest1@test.com", "Test1111"};
        final String[] ADDITIONAL_LOGIN_PASS_2 = {"LoginTest3@test.com", "Test33333333333"};

        final String[] INCORRECT_LOGIN_CORRECT_PASS_1 = {"Test3@testcom", "Test3333"};
        final String[] INCORRECT_LOGIN_CORRECT_PASS_2 = {"Test4test.com", "Test44444444"};

        final String[] CORRECT_LOGIN_INCORRECT_PASS_1 = {"Test5@test.com", "Test555"};
        final String[] CORRECT_LOGIN_INCORRECT_PASS_2 = {"Test6@test.com", "        "};

        final String[] UNREGISTERED_LOGIN_PASS = {"abc@test.com", "password99"};


        // Helper functions ---

        static String[] toJson(Object[] objects) {
            return Arrays
                .stream(objects)
                .map(gson::toJson)
                .toArray(String[]::new);
        }

        static void throwIfIncorrectStatusCode(HttpResponse response, int status) {
            if (response.getStatusCode() != status) {
                throw new WrongAnswer(response.getRequest().getMethod() +
                    " " + response.getRequest().getLocalUri() +
                    " should respond with status code " + status +
                    ", responded: " + response.getStatusCode() + "\n\n" +
                    "Response body:\n" + response.getContent());
            }
        }

        CheckResult reloadServer() {
            try {
                reloadSpring();
            } catch (Exception e) {
                throw new UnexpectedError(e.getMessage());
            }

            return correct();
        }

        static Map<String, String> generateUrlParams(int len) {
            Map<String, String> params = new LinkedHashMap<>();

            for (int i = 0; i < len; i++) {
                params.put("key" + i, "value" + i);
            }

            return params;
        }

        static void sleep(int milliseconds) {
            try {
                Thread.sleep(milliseconds);
            } catch (Exception e) {
                throw new UnexpectedError(e.getMessage());
            }
        }

        static JsonArrayBuilder recipesToJsonArrayBuilder(Recipe[] recipes) {
            JsonArrayBuilder isArray = isArray();

            // just appends "item"(s)
            for (Recipe recipe : recipes) {

                isArray = isArray.item(
                    isObject()
                        .value("name", isString(recipe.name))
                        .value("category", isString(recipe.category))
                        .value("date", isString(d -> d.length() >= 8))
                        .value("description", isString(recipe.description))
                        .value("ingredients", isArray(recipe.ingredients))
                        .value("directions", isArray(recipe.directions)));
            }

            return isArray;
        }

        public HttpRequest addAuthUnregisteredUser(HttpRequest request) {
            return request.basicAuth(UNREGISTERED_LOGIN_PASS[0], UNREGISTERED_LOGIN_PASS[1]);
        }


        // Tests ---

        @DynamicTest
        DynamicTesting[] dt = new DynamicTesting[]{
            () -> testPostRegister(ADDITIONAL_LOGIN_PASS_1, 200),
            () -> testPostRegister(ADDITIONAL_LOGIN_PASS_1, 400),
            () -> testPostRegister(MAIN_LOGIN_PASS, 200),
            () -> testPostRegister(ADDITIONAL_LOGIN_PASS_2, 200),
            () -> testPostRegister(INCORRECT_LOGIN_CORRECT_PASS_1, 400),
            () -> testPostRegister(INCORRECT_LOGIN_CORRECT_PASS_2, 400),
            () -> testPostRegister(CORRECT_LOGIN_INCORRECT_PASS_1, 400),
            () -> testPostRegister(CORRECT_LOGIN_INCORRECT_PASS_2, 400),

            // Tests with authentication
            () -> testPostRecipe(JSON_RECIPES[0], MAIN_LOGIN_PASS),
            () -> testPostRecipe(JSON_RECIPES[1], MAIN_LOGIN_PASS),

            () -> testGetRecipe(recipeIds.get(0), RECIPES[0], MAIN_LOGIN_PASS),
            () -> testGetRecipe(recipeIds.get(1), RECIPES[1], MAIN_LOGIN_PASS),
            this::reloadServer,
            () -> testGetRecipe(recipeIds.get(0), RECIPES[0], MAIN_LOGIN_PASS),
            () -> testGetRecipe(recipeIds.get(1), RECIPES[1], MAIN_LOGIN_PASS),

            () -> testUpdateRecipe(recipeIds.get(0), JSON_RECIPES[1], MAIN_LOGIN_PASS),
            () -> testGetRecipe(recipeIds.get(0), RECIPES[1], MAIN_LOGIN_PASS),

            () -> testDeleteRecipe(recipeIds.get(0), MAIN_LOGIN_PASS),

            () -> testDeleteRecipeNotFoundStatusCode(recipeIds.get(0), MAIN_LOGIN_PASS),
            () -> testGetRecipeNotFoundStatusCode(recipeIds.get(0), MAIN_LOGIN_PASS),
            () -> testUpdateRecipeNotFoundStatusCode(recipeIds.get(0), JSON_RECIPES[1], MAIN_LOGIN_PASS),


            // Add more recipes before testing if elems sorted correctly by date.
            // Sleep calls added because tests send requests very quickly and this can produce duplicate dates in rare cases.
            // And if a user uses "unstable" sort to sort recipes, tests will be unstable. Thread sleep prevents duplicates.
            () -> {
                sleep(10);
                return testPostRecipe(JSON_RECIPES[2], MAIN_LOGIN_PASS);
            },
            () -> {
                sleep(10);
                return testPostRecipe(JSON_RECIPES[3], MAIN_LOGIN_PASS);
            },
            () -> {
                sleep(10);
                return testPostRecipe(JSON_RECIPES[4], MAIN_LOGIN_PASS);
            },
            () -> {
                sleep(10);
                return testPostRecipe(JSON_RECIPES[5], MAIN_LOGIN_PASS);
            },
            () -> {
                sleep(10);
                return testPostRecipe(JSON_RECIPES[6], MAIN_LOGIN_PASS);
            },
            () -> {
                sleep(10);
                return testPostRecipe(JSON_RECIPES[7], MAIN_LOGIN_PASS);
            },
            () -> {
                sleep(10);
                return testPostRecipe(JSON_RECIPES[8], MAIN_LOGIN_PASS);
            },
            () -> {
                sleep(10);
                return testPostRecipe(JSON_RECIPES[9], MAIN_LOGIN_PASS);
            },
            () -> {
                sleep(10);
                return testPostRecipe(JSON_RECIPES[10], MAIN_LOGIN_PASS);
            },
            () -> {
                sleep(10);
                return testPostRecipe(JSON_RECIPES[11], MAIN_LOGIN_PASS);
            },
            () -> {
                sleep(10);
                return testPostRecipe(JSON_RECIPES[12], MAIN_LOGIN_PASS);
            },
            () -> {
                sleep(10);
                return testPostRecipe(JSON_RECIPES[13], MAIN_LOGIN_PASS);
            },
            () -> {
                sleep(10);
                return testPostRecipe(JSON_RECIPES[14], MAIN_LOGIN_PASS);
            },

            () -> testGetRecipesByCategorySorted(RECIPES_CATEGORY_DESSERT_REVERSED, "dessert", MAIN_LOGIN_PASS),
            () -> testGetRecipesByNameContainsSorted(RECIPES_NAME_CONTAINS_ICE_CREAM_REVERSED, "ice-cream", MAIN_LOGIN_PASS),

            () -> testGetRecipesByCategorySorted(new Recipe[]{}, "should_return_empty_array_1", MAIN_LOGIN_PASS),
            () -> testGetRecipesByNameContainsSorted(new Recipe[]{}, "should_return_empty_array_2", MAIN_LOGIN_PASS),

            () -> testGetRecipesBadRequestStatusCode(0, MAIN_LOGIN_PASS),
            () -> testGetRecipesBadRequestStatusCode(1, MAIN_LOGIN_PASS),
            () -> testGetRecipesBadRequestStatusCode(2, MAIN_LOGIN_PASS),
            () -> testGetRecipesBadRequestStatusCode(5, MAIN_LOGIN_PASS),

            () -> testPostIncorrectRecipeStatusCode(JSON_INCORRECT_RECIPES[0], MAIN_LOGIN_PASS),
            () -> testPostIncorrectRecipeStatusCode(JSON_INCORRECT_RECIPES[1], MAIN_LOGIN_PASS),
            () -> testPostIncorrectRecipeStatusCode(JSON_INCORRECT_RECIPES[2], MAIN_LOGIN_PASS),
            () -> testPostIncorrectRecipeStatusCode(JSON_INCORRECT_RECIPES[3], MAIN_LOGIN_PASS),
            () -> testPostIncorrectRecipeStatusCode(JSON_INCORRECT_RECIPES[4], MAIN_LOGIN_PASS),
            () -> testPostIncorrectRecipeStatusCode(JSON_INCORRECT_RECIPES[5], MAIN_LOGIN_PASS),
            () -> testPostIncorrectRecipeStatusCode(JSON_INCORRECT_RECIPES[6], MAIN_LOGIN_PASS),
            () -> testPostIncorrectRecipeStatusCode(JSON_INCORRECT_RECIPES[7], MAIN_LOGIN_PASS),
            () -> testPostIncorrectRecipeStatusCode(JSON_INCORRECT_RECIPES[8], MAIN_LOGIN_PASS),
            () -> testPostIncorrectRecipeStatusCode(JSON_INCORRECT_RECIPES[9], MAIN_LOGIN_PASS),

            () -> testUpdateIncorrectRecipeStatusCode(recipeIds.get(1), JSON_INCORRECT_RECIPES[0], MAIN_LOGIN_PASS),
            () -> testUpdateIncorrectRecipeStatusCode(recipeIds.get(1), JSON_INCORRECT_RECIPES[1], MAIN_LOGIN_PASS),
            () -> testUpdateIncorrectRecipeStatusCode(recipeIds.get(1), JSON_INCORRECT_RECIPES[2], MAIN_LOGIN_PASS),
            () -> testUpdateIncorrectRecipeStatusCode(recipeIds.get(1), JSON_INCORRECT_RECIPES[3], MAIN_LOGIN_PASS),
            () -> testUpdateIncorrectRecipeStatusCode(recipeIds.get(1), JSON_INCORRECT_RECIPES[4], MAIN_LOGIN_PASS),
            () -> testUpdateIncorrectRecipeStatusCode(recipeIds.get(1), JSON_INCORRECT_RECIPES[5], MAIN_LOGIN_PASS),
            () -> testUpdateIncorrectRecipeStatusCode(recipeIds.get(1), JSON_INCORRECT_RECIPES[6], MAIN_LOGIN_PASS),
            () -> testUpdateIncorrectRecipeStatusCode(recipeIds.get(1), JSON_INCORRECT_RECIPES[7], MAIN_LOGIN_PASS),
            () -> testUpdateIncorrectRecipeStatusCode(recipeIds.get(1), JSON_INCORRECT_RECIPES[8], MAIN_LOGIN_PASS),
            () -> testUpdateIncorrectRecipeStatusCode(recipeIds.get(1), JSON_INCORRECT_RECIPES[9], MAIN_LOGIN_PASS),
            this::reloadServer,

            // Use second registered user to check if endpoints are available.
            () -> testPostRecipe(JSON_RECIPES[0], ADDITIONAL_LOGIN_PASS_1),
            () -> testGetRecipe(recipeIds.get(1), RECIPES[1], ADDITIONAL_LOGIN_PASS_1),
            () -> testGetRecipesByCategorySorted(RECIPES_CATEGORY_DESSERT_REVERSED, "dessert", ADDITIONAL_LOGIN_PASS_1),
            () -> testGetRecipesByNameContainsSorted(RECIPES_NAME_CONTAINS_ICE_CREAM_REVERSED, "ice-cream", ADDITIONAL_LOGIN_PASS_1),
            // Use third registered user to check forbidden status code.
            () -> testDeleteRecipeForbiddenStatusCode(recipeIds.get(1), ADDITIONAL_LOGIN_PASS_2),
            () -> testUpdateRecipeForbiddenStatusCode(recipeIds.get(1), JSON_RECIPES[2], ADDITIONAL_LOGIN_PASS_2),

            // unregistered login and pass
            () -> testPostRecipeUnregisteredUser(JSON_RECIPES[0]),
            () -> testGetRecipeUnregisteredUser(recipeIds.get(0)),
            () -> testUpdateRecipeUnregisteredUser(recipeIds.get(0), JSON_RECIPES[1]),
            () -> testDeleteRecipeUnregisteredUser(recipeIds.get(0)),
            () -> testGetRecipesByCategorySortedUnregisteredUser("dessert"),
            () -> testGetRecipesByNameContainsSortedUnregisteredUser("ice-cream"),

            // without authentication
            () -> testPostRecipeNoAuth(JSON_RECIPES[0]),
            () -> testGetRecipeNoAuth(recipeIds.get(0)),
            () -> testUpdateRecipeNoAuth(recipeIds.get(0), JSON_RECIPES[1]),
            () -> testDeleteRecipeNoAuth(recipeIds.get(0)),
            () -> testGetRecipesByCategorySortedNoAuth("dessert"),
            () -> testGetRecipesByNameContainsSortedNoAuth("ice-cream")
        };

        CheckResult testPostRegister(String[] loginAndPass, int statusCode) {
            final String JSON_LOGIN_PASS = "{\"email\":\"" + loginAndPass[0] + "\",\"password\":\"" + loginAndPass[1] + "\"}";

            HttpResponse response = post(API_REGISTER, JSON_LOGIN_PASS).send();

            throwIfIncorrectStatusCode(response, statusCode);

            return correct();
        }

        // Tests with authentication
        CheckResult testPostRecipe(String jsonRecipe, String[] loginPass) {
            HttpResponse response = post(API_RECIPE_NEW, jsonRecipe).basicAuth(loginPass[0], loginPass[1]).send();

            throwIfIncorrectStatusCode(response, 200);

            expect(response.getContent()).asJson().check(
                isObject()
                    .value("id", isInteger(recipeId -> {
                        recipeIds.add(recipeId);
                        return true;
                    })));

            return correct();
        }

        CheckResult testGetRecipe(int recipeId, Recipe recipe, String[] loginPass) {
            HttpResponse response = get(API_RECIPE + recipeId).basicAuth(loginPass[0], loginPass[1]).send();

            throwIfIncorrectStatusCode(response, 200);

            expect(response.getContent()).asJson().check(
                isObject()
                    .value("name", isString(recipe.name))
                    .value("category", isString(recipe.category))
                    .value("date", isString(d -> d.length() >= 8))
                    .value("description", isString(recipe.description))
                    .value("ingredients", isArray(recipe.ingredients))
                    .value("directions", isArray(recipe.directions)));

            return correct();
        }

        CheckResult testUpdateRecipe(int recipeId, String jsonRecipe, String[] loginPass) {
            HttpResponse response = put(API_RECIPE + recipeId, jsonRecipe).basicAuth(loginPass[0], loginPass[1]).send();

            throwIfIncorrectStatusCode(response, 204);

            return correct();
        }

        CheckResult testDeleteRecipe(int recipeId, String[] loginPass) {
            HttpResponse response = delete(API_RECIPE + recipeId).basicAuth(loginPass[0], loginPass[1]).send();

            throwIfIncorrectStatusCode(response, 204);

            return correct();
        }

        CheckResult testGetRecipesByCategorySorted(Recipe[] recipes, String paramValue, String[] loginPass) {
            HttpResponse response = get(API_RECIPE_SEARCH).addParam(CATEGORY, paramValue).basicAuth(loginPass[0], loginPass[1]).send();

            throwIfIncorrectStatusCode(response, 200);

            expect(response.getContent()).asJson().check(
                recipesToJsonArrayBuilder(recipes)
            );

            return correct();
        }

        private CheckResult testGetRecipesByNameContainsSorted(Recipe[] recipes, String paramValue, String[] loginPass) {
            HttpResponse response = get(API_RECIPE_SEARCH).basicAuth(loginPass[0], loginPass[1]).addParam(NAME, paramValue).send();

            throwIfIncorrectStatusCode(response, 200);

            expect(response.getContent()).asJson().check(
                recipesToJsonArrayBuilder(recipes)
            );

            return correct();
        }

        // Status codes tests with authentication
        CheckResult testGetRecipeNotFoundStatusCode(int recipeId, String[] loginPass) {
            HttpResponse response = get(API_RECIPE + recipeId).basicAuth(loginPass[0], loginPass[1]).send();

            throwIfIncorrectStatusCode(response, 404);

            return correct();
        }

        CheckResult testUpdateRecipeNotFoundStatusCode(int recipeId, String jsonRecipe, String[] loginPass) {
            HttpResponse response = put(API_RECIPE + recipeId, jsonRecipe).basicAuth(loginPass[0], loginPass[1]).send();

            throwIfIncorrectStatusCode(response, 404);

            return correct();
        }

        CheckResult testDeleteRecipeNotFoundStatusCode(int recipeId, String[] loginPass) {
            HttpResponse response = delete(API_RECIPE + recipeId).basicAuth(loginPass[0], loginPass[1]).send();

            throwIfIncorrectStatusCode(response, 404);

            return correct();
        }

        CheckResult testGetRecipesBadRequestStatusCode(int numberOfQueryParams, String[] loginPass) {
            Map<String, String> params = generateUrlParams(numberOfQueryParams);

            HttpResponse response = get(API_RECIPE_SEARCH).addParams(params).basicAuth(loginPass[0], loginPass[1]).send();

            throwIfIncorrectStatusCode(response, 400);

            return correct();
        }

        CheckResult testPostIncorrectRecipeStatusCode(String incorrectJsonRecipe, String[] loginPass) {
            HttpResponse response = post(API_RECIPE_NEW, incorrectJsonRecipe).basicAuth(loginPass[0], loginPass[1]).send();

            throwIfIncorrectStatusCode(response, 400);

            return correct();
        }

        CheckResult testUpdateIncorrectRecipeStatusCode(int recipeId, String incorrectJsonRecipe, String[] loginPass) {
            HttpResponse response = put(API_RECIPE + recipeId, incorrectJsonRecipe).basicAuth(loginPass[0], loginPass[1]).send();

            throwIfIncorrectStatusCode(response, 400);

            return correct();
        }

        CheckResult testDeleteRecipeForbiddenStatusCode(int recipeId, String[] loginPass) {
            HttpResponse response = delete(API_RECIPE + recipeId).basicAuth(loginPass[0], loginPass[1]).send();

            throwIfIncorrectStatusCode(response, 403);

            return correct();
        }

        CheckResult testUpdateRecipeForbiddenStatusCode(int recipeId, String jsonRecipe, String[] loginPass) {
            HttpResponse response = put(API_RECIPE + recipeId, jsonRecipe).basicAuth(loginPass[0], loginPass[1]).send();

            throwIfIncorrectStatusCode(response, 403);

            return correct();
        }

        // Not registered user tests
        CheckResult testPostRecipeUnregisteredUser(String jsonRecipe) {
            HttpResponse response = addAuthUnregisteredUser(post(API_RECIPE_NEW, jsonRecipe)).send();

            throwIfIncorrectStatusCode(response, 401);

            return correct();
        }

        CheckResult testGetRecipeUnregisteredUser(int recipeId) {
            HttpResponse response = addAuthUnregisteredUser(get(API_RECIPE + recipeId)).send();

            throwIfIncorrectStatusCode(response, 401);

            return correct();
        }

        CheckResult testUpdateRecipeUnregisteredUser(int recipeId, String jsonRecipe) {
            HttpResponse response = addAuthUnregisteredUser(put(API_RECIPE + recipeId, jsonRecipe)).send();

            throwIfIncorrectStatusCode(response, 401);

            return correct();
        }

        CheckResult testDeleteRecipeUnregisteredUser(int recipeId) {
            HttpResponse response = addAuthUnregisteredUser(delete(API_RECIPE + recipeId)).send();

            throwIfIncorrectStatusCode(response, 401);

            return correct();
        }

        CheckResult testGetRecipesByCategorySortedUnregisteredUser(String paramValue) {
            HttpResponse response = addAuthUnregisteredUser(get(API_RECIPE_SEARCH)).addParam(CATEGORY, paramValue).send();

            throwIfIncorrectStatusCode(response, 401);


            return correct();
        }

        private CheckResult testGetRecipesByNameContainsSortedUnregisteredUser(String paramValue) {
            HttpResponse response = addAuthUnregisteredUser(get(API_RECIPE_SEARCH)).addParam(NAME, paramValue).send();

            throwIfIncorrectStatusCode(response, 401);

            return correct();
        }

        // No authentication tests
        CheckResult testPostRecipeNoAuth(String jsonRecipe) {
            HttpResponse response = post(API_RECIPE_NEW, jsonRecipe).send();

            throwIfIncorrectStatusCode(response, 401);

            return correct();
        }

        CheckResult testGetRecipeNoAuth(int recipeId) {
            HttpResponse response = get(API_RECIPE + recipeId).send();

            throwIfIncorrectStatusCode(response, 401);

            return correct();
        }

        CheckResult testUpdateRecipeNoAuth(int recipeId, String jsonRecipe) {
            HttpResponse response = put(API_RECIPE + recipeId, jsonRecipe).send();

            throwIfIncorrectStatusCode(response, 401);

            return correct();
        }

        CheckResult testDeleteRecipeNoAuth(int recipeId) {
            HttpResponse response = delete(API_RECIPE + recipeId).send();

            throwIfIncorrectStatusCode(response, 401);

            return correct();
        }

        CheckResult testGetRecipesByCategorySortedNoAuth(String paramValue) {
            HttpResponse response = get(API_RECIPE_SEARCH).addParam(CATEGORY, paramValue).send();

            throwIfIncorrectStatusCode(response, 401);


            return correct();
        }

        private CheckResult testGetRecipesByNameContainsSortedNoAuth(String paramValue) {
            HttpResponse response = get(API_RECIPE_SEARCH).addParam(NAME, paramValue).send();

            throwIfIncorrectStatusCode(response, 401);

            return correct();
        }
    }
  learner_created: false
- name: src/recipes/presentation/RecipeController.java
  visible: true
  text: |
    package recipes.presentation;

    import io.micrometer.core.lang.Nullable;
    import org.springframework.beans.factory.annotation.Autowired;
    import org.springframework.http.HttpStatus;
    import org.springframework.http.ResponseEntity;
    import org.springframework.web.bind.annotation.*;
    import recipes.business.ID;
    import recipes.business.Recipe;
    import recipes.business.RecipeService;
    import javax.validation.Valid;
    import javax.validation.constraints.Pattern;
    import java.time.LocalDateTime;

    @RestController
    @RequestMapping("/api")
    public class RecipeController {

        @Autowired
        private RecipeService recipeService;
        @Autowired
        private ID id;

        @PostMapping("/recipe/new")

        public ResponseEntity<?> addRecipe(@Valid @RequestBody Recipe recipe) {
            Recipe recipeCreate = new Recipe(recipe.getName(),
                                             recipe.getCategory(),
                                             recipe.getDescription(),
                                             recipe.getIngredients(),
                                             recipe.getDirections());
            recipeCreate.setDate(LocalDateTime.now());
            recipeService.save(recipeCreate);
            this.id.setId(recipeCreate.getId());
            return ResponseEntity.status(HttpStatus.OK).body(id);
        }


        @GetMapping("/recipe/{id}")
        public ResponseEntity<?> getRecipe(@PathVariable("id") @Pattern(regexp = "[0-9]+") Long id) {
            if (recipeService.findRecipeById(id).isPresent()) {
                return ResponseEntity.status(HttpStatus.OK).body(recipeService.findRecipeById(id));
            } else {
                throw new RecipeNotFoundException();
            }
        }

        /**
         * @param category
         * @return
         */
        @GetMapping("/recipe/search/")
        public ResponseEntity<?> getRecipesByCategoryOrName(@Valid @RequestParam(required = false) @Nullable  String category,
                                                            @Valid @RequestParam(required = false) @Nullable  String name) {
    //        if (recipeService.findByCategory(category)) {
            if (category == null && name == null) {
                throw new SearchParametersException();
            }
            if (name == null) {
                return ResponseEntity.status(HttpStatus.OK).body(recipeService.findByCategory(category));
            } else if (category == null) {
                return ResponseEntity.status(HttpStatus.OK).body(recipeService.findByName(name));
            } else {
                throw new SearchParametersException();
            }
        }



        @PutMapping("/recipe/{id}")
        public ResponseEntity<?> putRecipe(@PathVariable("id") @Pattern(regexp = "[0-9]+") Long id,
                                           @Valid @RequestBody Recipe recipe) {
            if (recipeService.findRecipeById(id).isPresent()) {
                recipe.setDate(LocalDateTime.now());
                recipe.setId(id);
                recipeService.save(recipe);
                throw  new NoContentRecipeException();
            } else {
                throw new RecipeNotFoundException();
            }

        }

        @DeleteMapping("/recipe/{id}")
        public ResponseEntity<?> deleteRecipe(@PathVariable("id") @Pattern(regexp = "[0-9]+")Long id) {
            if (recipeService.findRecipeById(id).isPresent()) {
                recipeService.deleteById(id);
                throw  new NoContentRecipeException();
            } else {
                throw new RecipeNotFoundException();
            }
        }

        @ResponseStatus(code = HttpStatus.NOT_FOUND)
        class RecipeNotFoundException extends RuntimeException {
        }
        @ResponseStatus(code = HttpStatus.NO_CONTENT)
        class NoContentRecipeException extends RuntimeException {
        }
        @ResponseStatus(code = HttpStatus.BAD_REQUEST)
        class SearchParametersException extends RuntimeException {

        }


    }
  learner_created: true
- name: src/recipes/persistence/RecipeRepository.java
  visible: true
  text: |
    package recipes.persistence;

    import org.springframework.data.repository.CrudRepository;
    import org.springframework.stereotype.Repository;
    import recipes.business.Recipe;

    import java.util.List;
    import java.util.Optional;

    @Repository
    public interface RecipeRepository extends CrudRepository<Recipe, Long>  {

        Optional<Recipe> findById(Long id);

        void deleteById(Long id);

        List<Recipe> findAllByCategoryIgnoreCaseOrderByDateDesc(String category);

        List<Recipe> findAllByNameIgnoreCaseContainingOrderByDateDesc(String category);

    }
  learner_created: true
- name: src/recipes/presentation/SecurityConfiguration.java
  visible: true
  learner_created: true
- name: src/recipes/business/recipe/ID.java
  visible: true
  text: |
    package recipes.business;

    import lombok.Data;
    import org.springframework.stereotype.Component;


    @Data
    @Component
    public class ID {

        //@NotNull
    //    @GeneratedValue(strategy = GenerationType.AUTO)
        private Long id;

        public Long getId() {
            return id;
        }

        public void setId(Long id) {
            this.id = id;
        }

    }
  learner_created: true
- name: src/recipes/business/recipe/RecipeService.java
  visible: true
  text: |
    package recipes.business;

    import org.springframework.beans.factory.annotation.Autowired;
    import org.springframework.stereotype.Service;
    import recipes.persistence.RecipeRepository;

    import java.util.List;
    import java.util.Optional;

    @Service
    public class RecipeService {


        private final RecipeRepository recipeRepository;

        @Autowired
        public RecipeService(RecipeRepository recipeRepository) {
            this.recipeRepository = recipeRepository;
        }

        public Optional<Recipe> findRecipeById(Long id) {
            return recipeRepository.findById(id);
        }

        public Recipe save(Recipe recipe) {
            return recipeRepository.save(recipe);
        }

        public void deleteById(Long id) {
            recipeRepository.deleteById(id);
        };

        public List<Recipe> findByCategory(String category) {
            return recipeRepository.findAllByCategoryIgnoreCaseOrderByDateDesc(category);
        }
        public List<Recipe> findByName(String name) {
            return recipeRepository.findAllByNameIgnoreCaseContainingOrderByDateDesc(name);
        }


    }
  learner_created: true
- name: src/recipes/business/recipe/Recipe.java
  visible: true
  text: |
    package recipes.business;

    import com.fasterxml.jackson.annotation.JsonFormat;
    import com.fasterxml.jackson.annotation.JsonIgnore;
    import lombok.AllArgsConstructor;
    import lombok.Data;
    import lombok.NoArgsConstructor;
    import javax.persistence.*;
    import javax.validation.constraints.NotBlank;
    import javax.validation.constraints.NotNull;
    import javax.validation.constraints.Size;
    import java.time.LocalDateTime;
    import java.util.List;

    @Data
    @NoArgsConstructor
    @AllArgsConstructor
    @Entity
    @Table(name = "Recipe")
    public class Recipe {

        @Id
        @JsonIgnore()
        @Column(name = "id")
        @GeneratedValue(strategy = GenerationType.AUTO)
        private Long id;

        @NotNull
        @NotBlank
        private String name;


        @NotNull
        @NotBlank
        private String category;

        @Column(columnDefinition = "TIMESTAMP")
        @JsonFormat(pattern = "dd.MM.YYYY HH:mm:ss.SSSSSS")
        private LocalDateTime date;

        @NotNull
        @NotBlank
        private String description;

        @NotNull
        @Size(min = 1)
        @ElementCollection
        private List<String> ingredients;

        @NotNull
        @Size(min = 1)
        @ElementCollection
        private List<String> directions;


        public Recipe(String name,
                      String category,
                      String description,
                      List<String> ingredients,
                      List<String> directions) {

            this.name = name;
            this.category = category;
            this.description = description;
            this.ingredients = ingredients;
            this.directions = directions;
        }

    }
  learner_created: true
- name: src/recipes/persistence/UserRepository.java
  visible: true
  learner_created: true
- name: src/recipes/business/user/User.java
  visible: true
  learner_created: true
- name: src/recipes/business/user/MyUserDetails.java
  visible: true
  learner_created: true
- name: src/recipes/presentation/UserController.java
  visible: true
  learner_created: true
- name: src/recipes/business/user/UserService.java
  visible: true
  learner_created: true
- name: src/recipes/business/auth/IAuthenticationFacade.java
  visible: true
  learner_created: true
- name: src/recipes/business/auth/AuthenticationFacade.java
  visible: true
  learner_created: true
- name: src/recipes/presentation/ApplicationUserDetailsService.java
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/180/stages/921/implement#comment
status: Failed
feedback:
  message: "Wrong answer in test #9\n\nPOST /api/recipe/new should respond with status\
    \ code 200, responded: 500\n\nResponse body:\n{&quot;timestamp&quot;:&quot;2021-07-29T12:52:57.197+00:00&quot;,&quot;status&quot;:500,&quot;error&quot;:&quot;Internal\
    \ Server Error&quot;,&quot;message&quot;:&quot;&quot;,&quot;path&quot;:&quot;/api/recipe/new&quot;}\n\
    \nPlease find below the output of your program during this failed test.\n\n---\n\
    \n\n  .   ____          _            __ _ _\n /\\\\ / ___&#39;_ __ _ _(_)_ __\
    \  __ _ \\ \\ \\ \\\n( ( )\\___ | &#39;_ | &#39;_| | &#39;_ \\/ _` | \\ \\ \\\
    \ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  &#39;  |____| .__|_| |_|_|\
    \ |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot\
    \ ::        (v2.3.1.RELEASE)\n\n2021-07-29 17:52:50.435  INFO 24196 --- [    Test\
    \ worker] recipes.RecipesApplication               : Starting RecipesApplication\
    \ on DESKTOP-RT04MDB with PID 24196 (started by karim in C:\\Users\\karim\\IdeaProjects\\\
    Recipes\\Recipes\\task)\n2021-07-29 17:52:50.438  INFO 24196 --- [    Test worker]\
    \ recipes.RecipesApplication               : No active profile set, falling back\
    \ to default profiles: default\n2021-07-29 17:52:51.604  INFO 24196 --- [    Test\
    \ worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data\
    \ JPA repositories in DEFERRED mode.\n2021-07-29 17:52:51.679  INFO 24196 ---\
    \ [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring\
    \ Data repository scanning in 65ms. Found 2 JPA repository interfaces.\n2021-07-29\
    \ 17:52:52.359  INFO 24196 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer\
    \  : Tomcat initialized with port(s): 8881 (http)\n2021-07-29 17:52:52.373  INFO\
    \ 24196 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting\
    \ service [Tomcat]\n2021-07-29 17:52:52.373  INFO 24196 --- [    Test worker]\
    \ org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache\
    \ Tomcat/9.0.36]\n2021-07-29 17:52:52.547  INFO 24196 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]\
    \       : Initializing Spring embedded WebApplicationContext\n2021-07-29 17:52:52.547\
    \  INFO 24196 --- [    Test worker] w.s.c.ServletWebServerApplicationContext :\
    \ Root WebApplicationContext: initialization completed in 2053 ms\n2021-07-29\
    \ 17:52:52.687  INFO 24196 --- [    Test worker] com.zaxxer.hikari.HikariDataSource\
    \       : HikariPool-1 - Starting...\n2021-07-29 17:52:52.911  INFO 24196 ---\
    \ [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 -\
    \ Start completed.\n2021-07-29 17:52:52.919  INFO 24196 --- [    Test worker]\
    \ o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at &#39;/h2&#39;.\
    \ Database available at &#39;jdbc:h2:file:../recipes_db&#39;\n2021-07-29 17:52:53.094\
    \  INFO 24196 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor  :\
    \ Initializing ExecutorService &#39;applicationTaskExecutor&#39;\n2021-07-29 17:52:53.166\
    \  INFO 24196 --- [         task-1] o.hibernate.jpa.internal.util.LogHelper  :\
    \ HHH000204: Processing PersistenceUnitInfo [name: default]\n2021-07-29 17:52:53.225\
    \  WARN 24196 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration :\
    \ spring.jpa.open-in-view is enabled by default. Therefore, database queries may\
    \ be performed during view rendering. Explicitly configure spring.jpa.open-in-view\
    \ to disable this warning\n2021-07-29 17:52:53.242  INFO 24196 --- [         task-1]\
    \ org.hibernate.Version                    : HHH000412: Hibernate ORM core version\
    \ 5.4.17.Final\nIn Configure AUTH\nIn Configure HTTP\n2021-07-29 17:52:53.442\
    \  INFO 24196 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     :\
    \ Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@71f6a8fa,\
    \ org.springframework.security.web.context.SecurityContextPersistenceFilter@5e6dc5cf,\
    \ org.springframework.security.web.header.HeaderWriterFilter@46c05743, org.springframework.security.web.authentication.logout.LogoutFilter@2b921288,\
    \ org.springframework.security.web.authentication.www.BasicAuthenticationFilter@74dd7f03,\
    \ org.springframework.security.web.savedrequest.RequestCacheAwareFilter@65f2b516,\
    \ org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b59c0d6,\
    \ org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54ff922,\
    \ org.springframework.security.web.session.SessionManagementFilter@56233682, org.springframework.security.web.access.ExceptionTranslationFilter@2a0e87cb,\
    \ org.springframework.security.web.access.intercept.FilterSecurityInterceptor@66b93a2]\n\
    2021-07-29 17:52:53.456  INFO 24196 --- [         task-1] o.hibernate.annotations.common.Version\
    \   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}\n2021-07-29 17:52:53.670\
    \  INFO 24196 --- [         task-1] org.hibernate.dialect.Dialect            :\
    \ HHH000400: Using dialect: org.hibernate.dialect.H2Dialect\n2021-07-29 17:52:54.765\
    \  INFO 24196 --- [         task-1] o.h.e.t.j.p.i.JtaPlatformInitiator       :\
    \ HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]\n\
    2021-07-29 17:52:54.775  INFO 24196 --- [         task-1] j.LocalContainerEntityManagerFactoryBean\
    \ : Initialized JPA EntityManagerFactory for persistence unit &#39;default&#39;\n\
    2021-07-29 17:52:54.832  INFO 24196 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver\
    \      : Exposing 14 endpoint(s) beneath base path &#39;/actuator&#39;\n2021-07-29\
    \ 17:52:54.890  INFO 24196 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer\
    \  : Tomcat started on port(s): 8881 (http) with context path &#39;&#39;\n2021-07-29\
    \ 17:52:54.891  INFO 24196 --- [    Test worker] DeferredRepositoryInitializationListener\
    \ : Triggering deferred initialization of Spring Data repositories…\n2021-07-29\
    \ 17:52:55.249  INFO 24196 --- [    Test worker] DeferredRepositoryInitializationListener\
    \ : Spring Data repositories initialized!\n2021-07-29 17:52:55.264  INFO 24196\
    \ --- [    Test worker] recipes.RecipesApplication               : Started RecipesApplication\
    \ in 5.231 seconds (JVM running for 6.29)\n2021-07-29 17:52:55.663  INFO 24196\
    \ --- [nio-8881-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing\
    \ Spring DispatcherServlet &#39;dispatcherServlet&#39;\n2021-07-29 17:52:55.663\
    \  INFO 24196 --- [nio-8881-exec-1] o.s.web.servlet.DispatcherServlet        :\
    \ Initializing Servlet &#39;dispatcherServlet&#39;\n2021-07-29 17:52:55.674  INFO\
    \ 24196 --- [nio-8881-exec-1] o.s.web.servlet.DispatcherServlet        : Completed\
    \ initialization in 10 ms\n2021-07-29 17:52:56.669  WARN 24196 --- [nio-8881-exec-5]\
    \ .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException:\
    \ Validation failed for argument [0] in public void recipes.presentation.UserController.registerUser(recipes.business.user.User):\
    \ [Field error in object &#39;user&#39; on field &#39;email&#39;: rejected value\
    \ [Test3@testcom]; codes [Pattern.user.email,Pattern.email,Pattern.java.lang.String,Pattern];\
    \ arguments [org.springframework.context.support.DefaultMessageSourceResolvable:\
    \ codes [user.email,email]; arguments []; default message [email],[Ljavax.validation.constraints.Pattern$Flag;@4ead674b,.*@.*\\\
    ..+]; default message [must match &quot;.*@.*\\..+&quot;]] ]\n2021-07-29 17:52:56.687\
    \  WARN 24196 --- [nio-8881-exec-6] .w.s.m.s.DefaultHandlerExceptionResolver :\
    \ Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation\
    \ failed for argument [0] in public void recipes.presentation.UserController.registerUser(recipes.business.user.User)\
    \ with 2 errors: [Field error in object &#39;user&#39; on field &#39;email&#39;:\
    \ rejected value [Test4test.com]; codes [Email.user.email,Email.email,Email.java.lang.String,Email];\
    \ arguments [org.springframework.context.support.DefaultMessageSourceResolvable:\
    \ codes [user.email,email]; arguments []; default message [email],[Ljavax.validation.constraints.Pattern$Flag;@2d043ab4,.*];\
    \ default message [must be a well-formed email address]] [Field error in object\
    \ &#39;user&#39; on field &#39;email&#39;: rejected value [Test4test.com]; codes\
    \ [Pattern.user.email,Pattern.email,Pattern.java.lang.String,Pattern]; arguments\
    \ [org.springframework.context.support.DefaultMessageSourceResolvable: codes [user.email,email];\
    \ arguments []; default message [email],[Ljavax.validation.constraints.Pattern$Flag;@4ead674b,.*@.*\\\
    ..+]; default message [must match &quot;.*@.*\\..+&quot;]] ]\n2021-07-29 17:52:56.700\
    \  WARN 24196 --- [nio-8881-exec-7] .w.s.m.s.DefaultHandlerExceptionResolver :\
    \ Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation\
    \ failed for argument [0] in public void recipes.presentation.UserController.registerUser(recipes.business.user.User):\
    \ [Field error in object &#39;user&#39; on field &#39;password&#39;: rejected\
    \ value [Test555]; codes [Size.user.password,Size.password,Size.java.lang.String,Size];\
    \ arguments [org.springframework.context.support.DefaultMessageSourceResolvable:\
    \ codes [user.password,password]; arguments []; default message [password],2147483647,8];\
    \ default message [size must be between 8 and 2147483647]] ]\n2021-07-29 17:52:56.710\
    \  WARN 24196 --- [nio-8881-exec-8] .w.s.m.s.DefaultHandlerExceptionResolver :\
    \ Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation\
    \ failed for argument [0] in public void recipes.presentation.UserController.registerUser(recipes.business.user.User):\
    \ [Field error in object &#39;user&#39; on field &#39;password&#39;: rejected\
    \ value [        ]; codes [NotBlank.user.password,NotBlank.password,NotBlank.java.lang.String,NotBlank];\
    \ arguments [org.springframework.context.support.DefaultMessageSourceResolvable:\
    \ codes [user.password,password]; arguments []; default message [password]]; default\
    \ message [must not be blank]] ]\n2021-07-29 17:52:57.086  WARN 24196 --- [nio-8881-exec-9]\
    \ o.a.c.util.SessionIdGeneratorBase        : Creation of SecureRandom instance\
    \ for session ID generation using [SHA1PRNG] took [173] milliseconds.\n2021-07-29\
    \ 17:52:57.166 ERROR 24196 --- [nio-8881-exec-9] o.a.c.c.C.[.[.[/].[dispatcherServlet]\
    \    : Servlet.service() for servlet [dispatcherServlet] in context with path\
    \ [] threw exception [Handler dispatch failed; nested exception is java.lang.StackOverflowError]\
    \ with root cause\n\njava.lang.StackOverflowError: null\n\tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:465)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]\n\
    \tat java.base/java.util.AbstractCollection.toString(AbstractCollection.java:473)\
    \ ~[na:na]\n\tat org.hibernate.collection.internal.PersistentBag.toString(PersistentBag.java:622)\
    \ ~[hibernate-core-5.4.17.Final.jar:5.4.17.Final]\n\tat java.base/java.lang.String.valueOf(String.java:2951)\
    \ ~[na:na]\n\tat recipes.business.user.User.toString(User.java:13) ~[main/:na]\n\
    \tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\tat recipes.business.recipe.Recipe.toString(Recipe.java:17)\
    \ ~[main/:na]\n\tat java.base/java.lang.String.valueOf(String.java:2951) ~[na:na]\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:168) ~[na:na]"
  time: Thu, 29 Jul 2021 12:52:57 UTC
record: -1
